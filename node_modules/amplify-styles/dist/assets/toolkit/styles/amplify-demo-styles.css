code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace}code{color:#e83e8c;word-break:break-word}a>code,pre code{color:inherit}code,kbd,pre{font-size:87.5%}kbd{padding:.2rem .4rem;background-color:#212529;border-radius:.2rem;color:#fff}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;color:#212529}pre code{font-size:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.fade{opacity:0;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{display:none}.collapse.in,.single-select-demo.open ul{display:block}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}.demo-color-tile,.demo-size-control,.demo-switcher{box-shadow:0 1px 3px rgba(0,0,0,.07),0 1px 2px rgba(0,0,0,.12)}.demo-layout-contexts .layout-context-full:before,.demo-layout-contexts .layout-context-main:before,.demo-layout-contexts .layout-context-narrow:before{left:50%;transform:translateX(-50%);border-bottom:1px solid #bdbdbd;color:#676767;font-size:.6875rem;font-weight:500;padding:.25em;position:absolute;text-align:center;text-transform:uppercase;top:-3.75rem;width:100%}.demo-layout-contexts .demo-context{position:relative}.demo-layout-contexts .layout-context-main:before{content:'Main Column'}.demo-layout-contexts .layout-context-narrow:before{content:'Narrow Column'}.demo-layout-contexts .layout-context-full:before{content:'Full Width'}.demo-layout-contexts :after{font-family:monospace;font-weight:400;margin-left:.5em;opacity:.4}.demo-layout-contexts p:after{content:'<p>'}.demo-layout-contexts h1:after{content:'<h1>'}.demo-layout-contexts h2:after{content:'<h2>'}.demo-layout-contexts h3:after{content:'<h3>'}.demo-layout-contexts h4:after{content:'<h4>'}.demo-layout-contexts h5:after{content:'<h5>'}.demo-layout-contexts .amplify-caption:after{content:'class="amplify-caption"'}.demo-layout-contexts .amplify-label:after{content:'class="amplify-label"'}.demo-switcher{left:50%;transform:translateX(-50%);background-color:#fff;display:-ms-flexbox;display:flex;height:2.5em;line-height:2.5em;position:absolute;top:.625rem}.demo-switcher a{border-right:1px solid #e9e9e9;-ms-flex-pack:center;justify-content:center;-ms-flex:0 0 auto;flex:0 0 auto;font-size:.9375rem;font-weight:500;padding:0 1em}.demo-switcher a.active{background-color:#e9e9e9;color:#3b3b3b;pointer-events:none}.demo-breakpoints,.demo-breakpoints>div{display:-ms-flexbox;display:flex;font-weight:500}.demo-breakpoints{box-shadow:0 3px 6px rgba(0,0,0,.08),0 3px 6px rgba(0,0,0,.115);background-color:#fff;bottom:1.25rem;font-family:benton-sans;font-size:.9375rem;height:3.125rem;left:1.25rem;position:fixed;transition:all .15s ease-in-out;z-index:20}.demo-breakpoints>div{border-right:1px solid #e9e9e9;-ms-flex-pack:center;justify-content:center;-ms-flex-direction:column;flex-direction:column;line-height:1;padding:0 1em}.demo-breakpoints .demo-breakpoint-size{-ms-flex-align:center;align-items:center;color:#676767;font-size:1.5rem;font-weight:200;text-transform:uppercase}.demo-breakpoints .demo-breakpoint-label{color:#676767;font-size:.625rem;font-weight:300;letter-spacing:.05em;margin-bottom:.5em;text-transform:uppercase}.demo-breakpoints .demo-breakpoint-grid{-ms-flex-align:center;align-items:center;font-size:.8125rem;padding:0;width:6rem}.demo-grid{display:none;pointer-events:none;position:absolute;top:0;width:100%}.demo-grid,.demo-grid .container{height:100%}.demo-grid .col{border:0 solid rgba(50,120,200,.75);border-right-width:1px;border-bottom:0;border-top:0}.demo-grid .col:first-of-type{border-left-width:1px}.demo-size-control{background-color:#fdfdfd;line-height:2.5em;margin-bottom:1.5em;padding:.5em}.demo-size-control>*{vertical-align:middle}.demo-size-control input{margin-left:1em}.demo-size-control span{font-weight:500}.demo-color-tiles{display:block;margin:0 -.9375rem}.demo-color-tiles:after,.demo-color-tiles:before{content:" ";display:table}.demo-color-tiles:after{clear:both}.demo-color-tile{border-top-width:8em;border-top-style:solid;border-bottom-width:0;border-bottom-style:solid;background-color:#fff;display:block;float:left;font-weight:700;font-size:.75em;margin:.9375rem;padding:1em;width:16.25rem}.demo-color-tile .demo-color-tile__color{background-color:#fff;color:#676767;font-size:.9375rem;font-weight:400}.demo-color-tile .demo-color-tile__name{font-family:benton-sans;font-size:.9375rem;font-weight:500}.single-select-demo.open button:after{top:.5em;transform:rotate(180deg)}body{background-color:#f6f6f6}.f-control-bar+h1,.f-item-notes{margin-bottom:30px}.f-item-notes code{background-color:#fff;color:#d55a0c;outline:1px solid rgba(0,0,0,.1)}.f-item-notes p{max-width:none}.f-control-bar+h1{color:#3b3b3b;font-family:amplify;font-weight:300}.f-item-heading{color:#3b3b3b;font-family:amplify;font-size:18px;font-weight:700;text-transform:uppercase}.f-item-group{border-bottom:1px solid #a0a0a0}.f-menu,.f-menu>ul{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.f-menu{font-family:'benton-sans';font-size:.875rem;height:100vh;width:12.5rem}.f-menu a{font-size:.875rem;font-weight:400}.f-menu .f-menu__heading{-ms-flex-align:center;align-items:center;border-bottom:1px solid #e9e9e9;border-top:1px solid #e9e9e9;display:-ms-flexbox;display:flex;font-size:1rem;font-weight:400;height:42px;margin-top:-1px;padding-left:1.5rem;text-transform:none}.f-menu h2{color:#000;font-size:.75rem;font-weight:700;margin:1rem 2rem .3rem;border-bottom:0}.f-menu .collapse{height:auto;overflow:auto}.f-menu .menu-links a{padding-left:2.5rem}.f-menu>ul{margin-bottom:0;max-height:calc(100vh - 54px)}.f-menu>ul>li{margin-top:0}.mvm{font-family:benton-sans;font-size:24px;font-weight:300}.fs0{display:none}.glyph.fs1{background-color:#fff;float:left;height:100px;margin:10px;padding:20px;width:240px}.glyph.fs1 i{margin-bottom:10px}.pbs{text-align:center}.glyph.fs1 i,.pbs span{display:block}.mls{font-size:15px;line-height:1}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
